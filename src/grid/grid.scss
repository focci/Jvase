@charset 'utf-8';

.box {
    padding-left: $grid-gap;
    padding-right: $grid-gap;
    margin-left: auto;
    margin-right: auto;
}

.box,
.rows,
[class*='cols-'] {
    @extend .v-clear;
    
	position: relative;
}

.rows {
    margin-bottom: $grid-rows-margin-bottom;
    margin-left: -$grid-gap;
    margin-right: -$grid-gap;

    >[class*='cols-'] {
        padding-left: $grid-gap/2;
        padding-right: $grid-gap/2;
        &:first-child {
            padding-left: 0;
        }
        &:last-child {
            padding-right: 0;
        }
    }
}


@each $item in $grid-responsive-data {

	@if( nth($item, 1) == xs ) {
		[class*='cols-#{nth($item, 1)}-'] {
			float: left;
		}
		@for $i from 1 through $grid-total-column {
			.cols-#{nth($item, 1)}-#{$i} {
				width:  percentage($i / $grid-total-column);
			}
			.cols-#{nth($item, 1)}-offset-#{$i} {
				margin-left:  percentage($i / $grid-total-column);
			}
		}
	}
	@else {
		@media (#{nth($item, 4)}-width: nth($item, 2)) {
			.box-responsive {
				width: nth($item, 2) - nth($item, 3);
			}
			[class*='cols-#{nth($item, 1)}-'] {
				float: left;
			}
			@for $i from 1 through $grid-total-column {
				.cols-#{nth($item, 1)}-#{$i} {
					width:  percentage($i / $grid-total-column);
				}
				.cols-#{nth($item, 1)}-offset-#{$i} {
					margin-left:  percentage($i / $grid-total-column);
				}
			}
		}
	}
}