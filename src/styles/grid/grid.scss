@charset "utf-8";
.grid {
	@include mar-hor(auto);
	>.row >[class*='col-']{
		min-height: pr(1px);
		transition: width 0.4s;
		display: block;
	}
}
.grid, .grid >.row, .grid >.row >[class*='col-']{
	@extend .use-clear;
	position: relative;
}
.grid.use-border {
	@extend .use-col-gapless;
	@extend .use-row-gapless;
	border-left: solid pr(1px) $grid-border-color;
	border-top: solid pr(1px) $grid-border-color;
	>.row >[class*='col-'] {
		border-right: solid pr(1px) $grid-border-color;
		border-bottom: solid pr(1px) $grid-border-color;
	}
}
//
@each $cl in ( (xs $grid-sm 18 max '"col-xs-"'), (sm $grid-sm 18 min '"col-sm-"'),
		(md $grid-md 22 min '"col-md-"'), (lg $grid-lg 30 min '"col-lg-"'))
{
	@if( nth($cl, 1) == xs ) {
		.grid >.row >[class*=#{nth($cl, 5)}] {
			float: left;
		}
		@for $i from 1 through $grid-columns {
			.col-#{nth($cl, 1)}-#{$i} {
				width:  percentage($i / $grid-columns);
			}
			.col-#{nth($cl, 1)}-offset-#{$i} {
				margin-left:  percentage($i / $grid-columns);
			}
		}
	}
}